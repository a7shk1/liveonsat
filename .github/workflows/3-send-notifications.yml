name: 3. Send Live Match Notifications

on:
  workflow_dispatch:
    inputs:
      send_now:
        description: "Seed a LIVE match and send via topic"
        required: false
        default: "false"
      device_token:
        description: "FCM device token (اختياري) لإرسال اختبار مباشر"
        required: false
        default: ""
  schedule:
    - cron: "*/5 * * * *"
    - cron: "2-59/5 * * * *"

permissions:
  contents: write

concurrency:
  group: send-notifications
  cancel-in-progress: false   # 🔧 خليه false حتى ما يوقف الـ job القديم

jobs:
  send:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
        retry:
          max-attempts: 3
          delay-seconds: 10

      - name: Write Firebase service key
        shell: bash
        env:
          FCM_SERVICE_ACCOUNT: ${{ secrets.FCM_SERVICE_ACCOUNT }}
        run: |
          set -euo pipefail
          if [ -z "${FCM_SERVICE_ACCOUNT:-}" ]; then
            echo "Secret FCM_SERVICE_ACCOUNT is missing" >&2
            exit 1
          fi
          printf "%s" "$FCM_SERVICE_ACCOUNT" > "$RUNNER_TEMP/firebase.json"
          test -s "$RUNNER_TEMP/firebase.json"
          jq type "$RUNNER_TEMP/firebase.json" >/dev/null
          ls -l "$RUNNER_TEMP/firebase.json"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        shell: bash
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            grep -viE '^(importlib|importlib2)\s*($|[=<>~])' requirements.txt > /tmp/req.txt || true
            pip install -r /tmp/req.txt
          fi
          python -c "import pkgutil,sys; sys.exit(0 if pkgutil.find_loader('firebase_admin') else 1)" || pip install firebase-admin
          pip show firebase-admin || true

      - name: Seed a LIVE match (only when send_now=true)
        if: ${{ github.event.inputs.send_now == 'true' }}
        shell: bash
        run: |
          mkdir -p matches
          cat > matches/filtered_matches.json <<'JSON'
          {
            "date": "$(date -u +%F)",
            "matches": [
              {
                "home_team": "Real Madrid",
                "away_team": "Barcelona",
                "status_text": "LIVE",
                "competition": "La Liga",
                "kickoff_baghdad": "$(date -u +%H:%M) UTC"
              }
            ]
          }
          JSON
          cat matches/filtered_matches.json

      - name: Send notifications for LIVE matches
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ runner.temp }}/firebase.json
          TEST_DEVICE_TOKEN: ${{ github.event.inputs.device_token }}
        run: python scripts/send_notifications.py
        retry:
          max-attempts: 3
          delay-seconds: 15

      - name: Commit & push notified state
        if: always()
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "🔔 chore: update notified live matches state"
          file_pattern: "matches/notified.json"
