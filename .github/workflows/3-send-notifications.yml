name: 3. Send Live Match Notifications

on:
  workflow_dispatch:
  schedule:
    - cron: "*/5 * * * *"      # ูู 5 ุฏูุงูู
    - cron: "2-59/5 * * * *"   # ุงูุญุฑุงู ุฏูููุชูู

permissions:
  contents: write

concurrency:
  group: send-notifications
  cancel-in-progress: true

jobs:
  send:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # โ ูุชุงุจุฉ ููุชุงุญ ุงูุฎุฏูุฉ ูู Secrets ุฅูู ููู ูุคูุช
      # 1) ุฑูุญ Settings > Secrets and variables > Actions
      # 2) ุณู Secret ุจุงุณู FIREBASE_SERVICE_ACCOUNT_B64 (Base64) ุฃู FCM_SERVICE_ACCOUNT (JSON ูุตู)
      - name: Write Firebase service key
        env:
          FIREBASE_SERVICE_ACCOUNT_B64: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_B64 }}
          FCM_SERVICE_ACCOUNT: ${{ secrets.FCM_SERVICE_ACCOUNT }}
        shell: bash
        run: |
          set -euo pipefail
          if [ -n "${FIREBASE_SERVICE_ACCOUNT_B64:-}" ]; then
            echo "Using FIREBASE_SERVICE_ACCOUNT_B64"
            echo "$FIREBASE_SERVICE_ACCOUNT_B64" | base64 -d > "$RUNNER_TEMP/firebase.json"
          elif [ -n "${FCM_SERVICE_ACCOUNT:-}" ]; then
            echo "Using FCM_SERVICE_ACCOUNT"
            cat > "$RUNNER_TEMP/firebase.json" <<'JSON'
${{ secrets.FCM_SERVICE_ACCOUNT }}
JSON
          else
            echo "โ No Firebase service key secret provided." >&2
            exit 1
          fi

          # ุชุฃููุฏ ุฅู ุงูููู ูู ูุงุถู ูุตุงูุญ JSON
          ls -l "$RUNNER_TEMP/firebase.json"
          python - << 'PY'
import json
from pathlib import Path
p = Path("${{ runner.temp }}/firebase.json")
print("exists:", p.exists(), "size:", p.stat().st_size)
json.load(open(p, "r", encoding="utf-8"))
print("โ JSON is valid")
PY

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install firebase-admin
          fi

      - name: Send notifications for LIVE matches
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ runner.temp }}/firebase.json
        run: python scripts/send_notifications.py

      # ูุญูุธ matches/notified.json ุญุชู ูุง ูุนูุฏ ุฅุฑุณุงู ููุณ ุงููุจุงุฑุงุฉ
      - name: Commit & push notified state
        if: always()
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "๐ chore: update notified live matches state"
          file_pattern: "matches/notified.json"
